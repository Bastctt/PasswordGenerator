{"ast":null,"code":"var _jsxFileName = \"/Users/bastien/Desktop/PasswordGenerator/src/Components/Generator/Generator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../Generator/Generator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Generator() {\n  _s();\n  const [password, setPassword] = useState('');\n  const [length, setLength] = useState(12);\n  const [includeUppercase, setIncludeUppercase] = useState(true);\n  const [includeLowercase, setIncludeLowercase] = useState(true);\n  const [includeNumbers, setIncludeNumbers] = useState(true);\n  const [includeSymbols, setIncludeSymbols] = useState(true);\n  const generatePassword = () => {\n    const uppercaseChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    const lowercaseChars = 'abcdefghijklmnopqrstuvwxyz';\n    const numberChars = '0123456789';\n    const symbolChars = '!@#$%^&*()_+[]{}|;:,.<>?';\n    let allChars = '';\n    if (includeUppercase) {\n      allChars += uppercaseChars;\n    }\n    if (includeLowercase) {\n      allChars += lowercaseChars;\n    }\n    if (includeNumbers) {\n      allChars += numberChars;\n    }\n    if (includeSymbols) {\n      allChars += symbolChars;\n    }\n    let newPassword = '';\n    for (let i = 0; i < length; i++) {\n      const randomIndex = Math.floor(Math.random() * allChars.length);\n      newPassword += allChars[randomIndex];\n    }\n    setPassword(newPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), \" \", password]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password len: \", length, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"6\",\n          max: \"20\",\n          value: length,\n          onChange: e => setLength(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: includeUppercase,\n          onChange: () => setIncludeUppercase(!includeUppercase)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), \"Uppercase\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: includeLowercase,\n          onChange: () => setIncludeLowercase(!includeLowercase)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), \"Lowercase\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: includeNumbers,\n          onChange: () => setIncludeNumbers(!includeNumbers)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), \"Numbers\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: includeSymbols,\n          onChange: () => setIncludeSymbols(!includeSymbols)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), \"Symbols\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: generatePassword,\n      children: \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(Generator, \"99pIuxNTC0HgCSpp0zMjjWideX4=\");\n_c = Generator;\nexport default Generator;\nvar _c;\n$RefreshReg$(_c, \"Generator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Generator","_s","password","setPassword","length","setLength","includeUppercase","setIncludeUppercase","includeLowercase","setIncludeLowercase","includeNumbers","setIncludeNumbers","includeSymbols","setIncludeSymbols","generatePassword","uppercaseChars","lowercaseChars","numberChars","symbolChars","allChars","newPassword","i","randomIndex","Math","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","value","onChange","e","target","checked","onClick","_c","$RefreshReg$"],"sources":["/Users/bastien/Desktop/PasswordGenerator/src/Components/Generator/Generator.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport '../Generator/Generator.css';\n\nfunction Generator() {\n    const [password, setPassword] = useState('');\n    const [length, setLength] = useState(12);\n    const [includeUppercase, setIncludeUppercase] = useState(true);\n    const [includeLowercase, setIncludeLowercase] = useState(true);\n    const [includeNumbers, setIncludeNumbers] = useState(true);\n    const [includeSymbols, setIncludeSymbols] = useState(true);\n\n    const generatePassword = () => {\n        const uppercaseChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        const lowercaseChars = 'abcdefghijklmnopqrstuvwxyz';\n        const numberChars = '0123456789';\n        const symbolChars = '!@#$%^&*()_+[]{}|;:,.<>?';\n\n        let allChars = '';\n        if (includeUppercase) {\n            allChars += uppercaseChars;\n        }\n        if (includeLowercase) {\n            allChars += lowercaseChars;\n        }\n        if (includeNumbers) {\n            allChars += numberChars;\n        }\n        if (includeSymbols) {\n            allChars += symbolChars;\n        }\n\n        let newPassword = '';\n        for (let i = 0; i < length; i++) {\n            const randomIndex = Math.floor(Math.random() * allChars.length);\n            newPassword += allChars[randomIndex];\n        }\n\n        setPassword(newPassword);\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"password-display\">\n                <strong></strong> {password}\n            </div>\n            <form>\n                <label>\n                    Password len: {length}\n                    <input\n                        type=\"range\"\n                        min=\"6\"\n                        max=\"20\"\n                        value={length}\n                        onChange={(e) => setLength(e.target.value)}\n                    />\n                </label>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={includeUppercase}\n                        onChange={() => setIncludeUppercase(!includeUppercase)}\n                    />\n                    Uppercase\n                </label>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={includeLowercase}\n                        onChange={() => setIncludeLowercase(!includeLowercase)}\n                    />\n                    Lowercase\n                </label>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={includeNumbers}\n                        onChange={() => setIncludeNumbers(!includeNumbers)}\n                    />\n                    Numbers\n                </label>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={includeSymbols}\n                        onChange={() => setIncludeSymbols(!includeSymbols)}\n                    />\n                    Symbols\n                </label>\n            </form>\n            <button type=\"button\" onClick={generatePassword}>\n                    Generate\n                </button>\n        </div>\n    );\n}\n\nexport default Generator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}